//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//
//     Les changements apportés à ce fichier peuvent provoquer un comportement incorrect et seront perdus si
//     le code est regénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IncidentService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Incident", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    public partial class Incident : object
    {
        
        private IncidentService.CustomerAccount CustomerField;
        
        private System.DateTime DateCreationField;
        
        private System.Guid IncidentIdField;
        
        private int OrigineField;
        
        private int PriorityField;
        
        private int StatusField;
        
        private string TicketNumberField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IncidentService.CustomerAccount Customer
        {
            get
            {
                return this.CustomerField;
            }
            set
            {
                this.CustomerField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreation
        {
            get
            {
                return this.DateCreationField;
            }
            set
            {
                this.DateCreationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IncidentId
        {
            get
            {
                return this.IncidentIdField;
            }
            set
            {
                this.IncidentIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Origine
        {
            get
            {
                return this.OrigineField;
            }
            set
            {
                this.OrigineField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority
        {
            get
            {
                return this.PriorityField;
            }
            set
            {
                this.PriorityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TicketNumber
        {
            get
            {
                return this.TicketNumberField;
            }
            set
            {
                this.TicketNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerAccount", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    public partial class CustomerAccount : object
    {
        
        private string CityField;
        
        private string CountryField;
        
        private string NameField;
        
        private int PostalCodeField;
        
        private string SiteWebField;
        
        private string Street1Field;
        
        private string Street2Field;
        
        private string TelephoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City
        {
            get
            {
                return this.CityField;
            }
            set
            {
                this.CityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country
        {
            get
            {
                return this.CountryField;
            }
            set
            {
                this.CountryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostalCode
        {
            get
            {
                return this.PostalCodeField;
            }
            set
            {
                this.PostalCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteWeb
        {
            get
            {
                return this.SiteWebField;
            }
            set
            {
                this.SiteWebField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street1
        {
            get
            {
                return this.Street1Field;
            }
            set
            {
                this.Street1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street2
        {
            get
            {
                return this.Street2Field;
            }
            set
            {
                this.Street2Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone
        {
            get
            {
                return this.TelephoneField;
            }
            set
            {
                this.TelephoneField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IncidentService.IService1")]
    public interface IService1
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllAttributesInformation", ReplyAction="http://tempuri.org/IService1/GetAllAttributesInformationResponse")]
        System.Threading.Tasks.Task<string> GetAllAttributesInformationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMultipleRecord", ReplyAction="http://tempuri.org/IService1/GetMultipleRecordResponse")]
        System.Threading.Tasks.Task<IncidentService.Incident[]> GetMultipleRecordAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetIncident", ReplyAction="http://tempuri.org/IService1/GetIncidentResponse")]
        System.Threading.Tasks.Task<IncidentService.Incident> GetIncidentAsync(System.Guid recordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetIncidentBySearchAttribute", ReplyAction="http://tempuri.org/IService1/GetIncidentBySearchAttributeResponse")]
        System.Threading.Tasks.Task<IncidentService.Incident> GetIncidentBySearchAttributeAsync(string _searchName, string _searchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertIncident", ReplyAction="http://tempuri.org/IService1/InsertIncidentResponse")]
        System.Threading.Tasks.Task<System.Guid> InsertIncidentAsync(IncidentService.Incident incident, IncidentService.CustomerAccount customers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteIncident", ReplyAction="http://tempuri.org/IService1/DeleteIncidentResponse")]
        System.Threading.Tasks.Task<bool> DeleteIncidentAsync(System.Guid recordId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface IService1Channel : IncidentService.IService1, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<IncidentService.IService1>, IncidentService.IService1
    {
        
        /// <summary>
        /// Implémentez cette méthode partielle pour configurer le point de terminaison de service.
        /// </summary>
        /// <param name="serviceEndpoint">Point de terminaison à configurer</param>
        /// <param name="clientCredentials">Informations d'identification du client</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public Service1Client() : 
                base(Service1Client.GetDefaultBinding(), Service1Client.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IService1.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), Service1Client.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> GetAllAttributesInformationAsync()
        {
            return base.Channel.GetAllAttributesInformationAsync();
        }
        
        public System.Threading.Tasks.Task<IncidentService.Incident[]> GetMultipleRecordAsync()
        {
            return base.Channel.GetMultipleRecordAsync();
        }
        
        public System.Threading.Tasks.Task<IncidentService.Incident> GetIncidentAsync(System.Guid recordId)
        {
            return base.Channel.GetIncidentAsync(recordId);
        }
        
        public System.Threading.Tasks.Task<IncidentService.Incident> GetIncidentBySearchAttributeAsync(string _searchName, string _searchValue)
        {
            return base.Channel.GetIncidentBySearchAttributeAsync(_searchName, _searchValue);
        }
        
        public System.Threading.Tasks.Task<System.Guid> InsertIncidentAsync(IncidentService.Incident incident, IncidentService.CustomerAccount customers)
        {
            return base.Channel.InsertIncidentAsync(incident, customers);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteIncidentAsync(System.Guid recordId)
        {
            return base.Channel.DeleteIncidentAsync(recordId);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Le point de terminaison nommé \'{0}\' est introuvable.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:61951/Service1.svc");
            }
            throw new System.InvalidOperationException(string.Format("Le point de terminaison nommé \'{0}\' est introuvable.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return Service1Client.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return Service1Client.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IService1,
        }
    }
}
